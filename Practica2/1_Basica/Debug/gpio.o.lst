   1              		.cpu arm7tdmi
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 18, 4
  11              		.file	"gpio.c"
  21              	.Ltext0:
  22              		.file 1 "../gpio.c"
 1698              		.align	2
 1699              		.global	portB_conf
 1701              	portB_conf:
 1702              	.LFB0:
   1:../gpio.c     **** #include "44b.h"
   2:../gpio.c     **** #include "gpio.h"
   3:../gpio.c     **** 
   4:../gpio.c     **** /* Port B interface implementation */
   5:../gpio.c     **** 
   6:../gpio.c     **** int portB_conf(int pin, enum port_mode mode) {
 1703              		.loc 1 6 0
 1704              		.cfi_startproc
 1705              		@ Function supports interworking.
 1706              		@ args = 0, pretend = 0, frame = 16
 1707              		@ frame_needed = 1, uses_anonymous_args = 0
 1708 0000 0DC0A0E1 		mov	ip, sp
 1709              	.LCFI0:
 1710              		.cfi_def_cfa_register 12
 1711 0004 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1712 0008 04B04CE2 		sub	fp, ip, #4
 1713              		.cfi_offset 14, -8
 1714              		.cfi_offset 13, -12
 1715              		.cfi_offset 11, -16
 1716              	.LCFI1:
 1717              		.cfi_def_cfa 11, 4
 1718 000c 10D04DE2 		sub	sp, sp, #16
 1719 0010 18000BE5 		str	r0, [fp, #-24]
 1720 0014 0130A0E1 		mov	r3, r1
 1721 0018 19304BE5 		strb	r3, [fp, #-25]
   7:../gpio.c     **** 	int ret = 0;
 1722              		.loc 1 7 0
 1723 001c 0030A0E3 		mov	r3, #0
 1724 0020 10300BE5 		str	r3, [fp, #-16]
   8:../gpio.c     **** 	if (pin < 0 || pin > 10)
 1725              		.loc 1 8 0
 1726 0024 18301BE5 		ldr	r3, [fp, #-24]
 1727 0028 000053E3 		cmp	r3, #0
 1728 002c 020000BA 		blt	.L2
 1729              		.loc 1 8 0 is_stmt 0 discriminator 1
 1730 0030 18301BE5 		ldr	r3, [fp, #-24]
 1731 0034 0A0053E3 		cmp	r3, #10
 1732 0038 010000DA 		ble	.L3
 1733              	.L2:
   9:../gpio.c     **** 		return -1; // indica error
 1734              		.loc 1 9 0 is_stmt 1
 1735 003c 0030E0E3 		mvn	r3, #0
 1736 0040 1B0000EA 		b	.L4
 1737              	.L3:
  10:../gpio.c     **** 
  11:../gpio.c     **** 	if (mode == SIGOUT)
 1738              		.loc 1 11 0
 1739 0044 19305BE5 		ldrb	r3, [fp, #-25]	@ zero_extendqisi2
 1740 0048 020053E3 		cmp	r3, #2
 1741 004c 0800001A 		bne	.L5
  12:../gpio.c     **** 		// COMPLETAR: poner en rPCONB el bit indicado por pin a 1 para que por
  13:../gpio.c     **** 		// dicho pin en el puerto B salga la seÃ±al correspondiente del
  14:../gpio.c     **** 		// controlador de memoria
  15:../gpio.c     **** 		rPCONB |= (0x1 << pin);
 1742              		.loc 1 15 0
 1743 0050 6C309FE5 		ldr	r3, .L8
 1744 0054 68209FE5 		ldr	r2, .L8
 1745 0058 001092E5 		ldr	r1, [r2, #0]
 1746 005c 0100A0E3 		mov	r0, #1
 1747 0060 18201BE5 		ldr	r2, [fp, #-24]
 1748 0064 1022A0E1 		mov	r2, r0, asl r2
 1749 0068 022081E1 		orr	r2, r1, r2
 1750 006c 002083E5 		str	r2, [r3, #0]
 1751 0070 0E0000EA 		b	.L6
 1752              	.L5:
  16:../gpio.c     **** 
  17:../gpio.c     **** 	else if (mode == OUTPUT)
 1753              		.loc 1 17 0
 1754 0074 19305BE5 		ldrb	r3, [fp, #-25]	@ zero_extendqisi2
 1755 0078 010053E3 		cmp	r3, #1
 1756 007c 0900001A 		bne	.L7
  18:../gpio.c     **** 		// COMPLETAR: poner en rPCONB el bit indicado por pin a 0 para que dicho
  19:../gpio.c     **** 		// pin sea un pin de salida
  20:../gpio.c     **** 		rPCONB &=~(0x1 <<pin);
 1757              		.loc 1 20 0
 1758 0080 3C309FE5 		ldr	r3, .L8
 1759 0084 38209FE5 		ldr	r2, .L8
 1760 0088 001092E5 		ldr	r1, [r2, #0]
 1761 008c 0100A0E3 		mov	r0, #1
 1762 0090 18201BE5 		ldr	r2, [fp, #-24]
 1763 0094 1022A0E1 		mov	r2, r0, asl r2
 1764 0098 0220E0E1 		mvn	r2, r2
 1765 009c 022001E0 		and	r2, r1, r2
 1766 00a0 002083E5 		str	r2, [r3, #0]
 1767 00a4 010000EA 		b	.L6
 1768              	.L7:
  21:../gpio.c     **** 	else
  22:../gpio.c     **** 		ret = -1; // indica error
 1769              		.loc 1 22 0
 1770 00a8 0030E0E3 		mvn	r3, #0
 1771 00ac 10300BE5 		str	r3, [fp, #-16]
 1772              	.L6:
  23:../gpio.c     **** 
  24:../gpio.c     **** 	return ret;
 1773              		.loc 1 24 0
 1774 00b0 10301BE5 		ldr	r3, [fp, #-16]
 1775              	.L4:
  25:../gpio.c     **** }
 1776              		.loc 1 25 0
 1777 00b4 0300A0E1 		mov	r0, r3
 1778 00b8 0CD04BE2 		sub	sp, fp, #12
 1779 00bc 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1780 00c0 1EFF2FE1 		bx	lr
 1781              	.L9:
 1782              		.align	2
 1783              	.L8:
 1784 00c4 0800D201 		.word	30539784
 1785              		.cfi_endproc
 1786              	.LFE0:
 1788              		.align	2
 1789              		.global	portB_write
 1791              	portB_write:
 1792              	.LFB1:
  26:../gpio.c     **** 
  27:../gpio.c     **** int portB_write(int pin, enum digital val)
  28:../gpio.c     **** {
 1793              		.loc 1 28 0
 1794              		.cfi_startproc
 1795              		@ Function supports interworking.
 1796              		@ args = 0, pretend = 0, frame = 8
 1797              		@ frame_needed = 1, uses_anonymous_args = 0
 1798 00c8 0DC0A0E1 		mov	ip, sp
 1799              	.LCFI2:
 1800              		.cfi_def_cfa_register 12
 1801 00cc 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1802 00d0 04B04CE2 		sub	fp, ip, #4
 1803              		.cfi_offset 14, -8
 1804              		.cfi_offset 13, -12
 1805              		.cfi_offset 11, -16
 1806              	.LCFI3:
 1807              		.cfi_def_cfa 11, 4
 1808 00d4 08D04DE2 		sub	sp, sp, #8
 1809 00d8 10000BE5 		str	r0, [fp, #-16]
 1810 00dc 0130A0E1 		mov	r3, r1
 1811 00e0 11304BE5 		strb	r3, [fp, #-17]
  29:../gpio.c     **** 	if (pin < 0 || pin > 10)
 1812              		.loc 1 29 0
 1813 00e4 10301BE5 		ldr	r3, [fp, #-16]
 1814 00e8 000053E3 		cmp	r3, #0
 1815 00ec 020000BA 		blt	.L11
 1816              		.loc 1 29 0 is_stmt 0 discriminator 1
 1817 00f0 10301BE5 		ldr	r3, [fp, #-16]
 1818 00f4 0A0053E3 		cmp	r3, #10
 1819 00f8 010000DA 		ble	.L12
 1820              	.L11:
  30:../gpio.c     **** 		return -1; // indica error
 1821              		.loc 1 30 0 is_stmt 1
 1822 00fc 0030E0E3 		mvn	r3, #0
 1823 0100 1A0000EA 		b	.L13
 1824              	.L12:
  31:../gpio.c     **** 
  32:../gpio.c     **** 	if (val < 0 || val > 1)
 1825              		.loc 1 32 0
 1826 0104 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 1827 0108 010053E3 		cmp	r3, #1
 1828 010c 0100009A 		bls	.L14
  33:../gpio.c     **** 		return -1; // indica error
 1829              		.loc 1 33 0
 1830 0110 0030E0E3 		mvn	r3, #0
 1831 0114 150000EA 		b	.L13
 1832              	.L14:
  34:../gpio.c     **** 
  35:../gpio.c     **** 	if (val)
 1833              		.loc 1 35 0
 1834 0118 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 1835 011c 000053E3 		cmp	r3, #0
 1836 0120 0800000A 		beq	.L15
  36:../gpio.c     **** 		// COMPLETAR: poner en rPDATB el bit indicado por pin a 1
  37:../gpio.c     **** 		rPDATB |= (0x1 << pin);
 1837              		.loc 1 37 0
 1838 0124 54309FE5 		ldr	r3, .L17
 1839 0128 50209FE5 		ldr	r2, .L17
 1840 012c 001092E5 		ldr	r1, [r2, #0]
 1841 0130 0100A0E3 		mov	r0, #1
 1842 0134 10201BE5 		ldr	r2, [fp, #-16]
 1843 0138 1022A0E1 		mov	r2, r0, asl r2
 1844 013c 022081E1 		orr	r2, r1, r2
 1845 0140 002083E5 		str	r2, [r3, #0]
 1846 0144 080000EA 		b	.L16
 1847              	.L15:
  38:../gpio.c     **** 	else
  39:../gpio.c     **** 		// COMPLETAR: poner en rPDATB el bit indicado por pin a 0
  40:../gpio.c     **** 		rPDATB &=~ (0x1 << pin);
 1848              		.loc 1 40 0
 1849 0148 30309FE5 		ldr	r3, .L17
 1850 014c 2C209FE5 		ldr	r2, .L17
 1851 0150 001092E5 		ldr	r1, [r2, #0]
 1852 0154 0100A0E3 		mov	r0, #1
 1853 0158 10201BE5 		ldr	r2, [fp, #-16]
 1854 015c 1022A0E1 		mov	r2, r0, asl r2
 1855 0160 0220E0E1 		mvn	r2, r2
 1856 0164 022001E0 		and	r2, r1, r2
 1857 0168 002083E5 		str	r2, [r3, #0]
 1858              	.L16:
  41:../gpio.c     **** 
  42:../gpio.c     **** 	return 0;
 1859              		.loc 1 42 0
 1860 016c 0030A0E3 		mov	r3, #0
 1861              	.L13:
  43:../gpio.c     **** }
 1862              		.loc 1 43 0
 1863 0170 0300A0E1 		mov	r0, r3
 1864 0174 0CD04BE2 		sub	sp, fp, #12
 1865 0178 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1866 017c 1EFF2FE1 		bx	lr
 1867              	.L18:
 1868              		.align	2
 1869              	.L17:
 1870 0180 0C00D201 		.word	30539788
 1871              		.cfi_endproc
 1872              	.LFE1:
 1874              		.align	2
 1875              		.global	portG_conf
 1877              	portG_conf:
 1878              	.LFB2:
  44:../gpio.c     **** 
  45:../gpio.c     **** /* Port G interface implementation */
  46:../gpio.c     **** 
  47:../gpio.c     **** int portG_conf(int pin, enum port_mode mode)
  48:../gpio.c     **** {
 1879              		.loc 1 48 0
 1880              		.cfi_startproc
 1881              		@ Function supports interworking.
 1882              		@ args = 0, pretend = 0, frame = 16
 1883              		@ frame_needed = 1, uses_anonymous_args = 0
 1884 0184 0DC0A0E1 		mov	ip, sp
 1885              	.LCFI4:
 1886              		.cfi_def_cfa_register 12
 1887 0188 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1888 018c 04B04CE2 		sub	fp, ip, #4
 1889              		.cfi_offset 14, -8
 1890              		.cfi_offset 13, -12
 1891              		.cfi_offset 11, -16
 1892              	.LCFI5:
 1893              		.cfi_def_cfa 11, 4
 1894 0190 10D04DE2 		sub	sp, sp, #16
 1895 0194 18000BE5 		str	r0, [fp, #-24]
 1896 0198 0130A0E1 		mov	r3, r1
 1897 019c 19304BE5 		strb	r3, [fp, #-25]
  49:../gpio.c     **** 	int pos  = pin*2;
 1898              		.loc 1 49 0
 1899 01a0 18301BE5 		ldr	r3, [fp, #-24]
 1900 01a4 8330A0E1 		mov	r3, r3, asl #1
 1901 01a8 10300BE5 		str	r3, [fp, #-16]
  50:../gpio.c     **** 
  51:../gpio.c     **** 	if (pin < 0 || pin > 7)
 1902              		.loc 1 51 0
 1903 01ac 18301BE5 		ldr	r3, [fp, #-24]
 1904 01b0 000053E3 		cmp	r3, #0
 1905 01b4 020000BA 		blt	.L20
 1906              		.loc 1 51 0 is_stmt 0 discriminator 1
 1907 01b8 18301BE5 		ldr	r3, [fp, #-24]
 1908 01bc 070053E3 		cmp	r3, #7
 1909 01c0 010000DA 		ble	.L21
 1910              	.L20:
  52:../gpio.c     **** 		return -1; // indica error
 1911              		.loc 1 52 0 is_stmt 1
 1912 01c4 0030E0E3 		mvn	r3, #0
 1913 01c8 410000EA 		b	.L22
 1914              	.L21:
  53:../gpio.c     **** 
  54:../gpio.c     **** 	switch (mode) {
 1915              		.loc 1 54 0
 1916 01cc 19305BE5 		ldrb	r3, [fp, #-25]	@ zero_extendqisi2
 1917 01d0 030053E3 		cmp	r3, #3
 1918 01d4 03F19F97 		ldrls	pc, [pc, r3, asl #2]
 1919 01d8 3A0000EA 		b	.L23
 1920              	.L28:
 1921 01dc EC010000 		.word	.L24
 1922 01e0 14020000 		.word	.L25
 1923 01e4 5C020000 		.word	.L26
 1924 01e8 A4020000 		.word	.L27
 1925              	.L24:
  55:../gpio.c     **** 		case INPUT:
  56:../gpio.c     **** 			// COMPLETAR: poner en rPCONG 00 a partir de la posiciÃ³n pos para
  57:../gpio.c     **** 			// configurar como pin de entrada el pin indicado por el parÃ¡metro pin
  58:../gpio.c     **** 			rPCONG &=~ (0x3 << pos);
 1926              		.loc 1 58 0
 1927 01ec F0309FE5 		ldr	r3, .L30
 1928 01f0 EC209FE5 		ldr	r2, .L30
 1929 01f4 001092E5 		ldr	r1, [r2, #0]
 1930 01f8 0300A0E3 		mov	r0, #3
 1931 01fc 10201BE5 		ldr	r2, [fp, #-16]
 1932 0200 1022A0E1 		mov	r2, r0, asl r2
 1933 0204 0220E0E1 		mvn	r2, r2
 1934 0208 022001E0 		and	r2, r1, r2
 1935 020c 002083E5 		str	r2, [r3, #0]
  59:../gpio.c     **** 
  60:../gpio.c     **** 			break;
 1936              		.loc 1 60 0
 1937 0210 2E0000EA 		b	.L29
 1938              	.L25:
  61:../gpio.c     **** 		case OUTPUT:
  62:../gpio.c     **** 			// COMPLETAR: poner en rPCONG 01 a partir de la posiciÃ³n pos para
  63:../gpio.c     **** 			// configurar como pin de salida el pin indicado por el parÃ¡metro pin
  64:../gpio.c     **** 			rPCONG &=~ (0x3 << pos);
 1939              		.loc 1 64 0
 1940 0214 C8309FE5 		ldr	r3, .L30
 1941 0218 C4209FE5 		ldr	r2, .L30
 1942 021c 001092E5 		ldr	r1, [r2, #0]
 1943 0220 0300A0E3 		mov	r0, #3
 1944 0224 10201BE5 		ldr	r2, [fp, #-16]
 1945 0228 1022A0E1 		mov	r2, r0, asl r2
 1946 022c 0220E0E1 		mvn	r2, r2
 1947 0230 022001E0 		and	r2, r1, r2
 1948 0234 002083E5 		str	r2, [r3, #0]
  65:../gpio.c     **** 			rPCONG |= (0x1 << pos);
 1949              		.loc 1 65 0
 1950 0238 A4309FE5 		ldr	r3, .L30
 1951 023c A0209FE5 		ldr	r2, .L30
 1952 0240 001092E5 		ldr	r1, [r2, #0]
 1953 0244 0100A0E3 		mov	r0, #1
 1954 0248 10201BE5 		ldr	r2, [fp, #-16]
 1955 024c 1022A0E1 		mov	r2, r0, asl r2
 1956 0250 022081E1 		orr	r2, r1, r2
 1957 0254 002083E5 		str	r2, [r3, #0]
  66:../gpio.c     **** 
  67:../gpio.c     **** 			break;
 1958              		.loc 1 67 0
 1959 0258 1C0000EA 		b	.L29
 1960              	.L26:
  68:../gpio.c     **** 		case SIGOUT:
  69:../gpio.c     **** 			// COMPLETAR: poner en rPCONG 10 a partir de la posiciÃ³n pos para
  70:../gpio.c     **** 			// que salga la seÃ±al interna correspondiente por el pin indicado
  71:../gpio.c     **** 			// por el parÃ¡metro pin
  72:../gpio.c     **** 			rPCONG |= (0x3 << pos);
 1961              		.loc 1 72 0
 1962 025c 80309FE5 		ldr	r3, .L30
 1963 0260 7C209FE5 		ldr	r2, .L30
 1964 0264 001092E5 		ldr	r1, [r2, #0]
 1965 0268 0300A0E3 		mov	r0, #3
 1966 026c 10201BE5 		ldr	r2, [fp, #-16]
 1967 0270 1022A0E1 		mov	r2, r0, asl r2
 1968 0274 022081E1 		orr	r2, r1, r2
 1969 0278 002083E5 		str	r2, [r3, #0]
  73:../gpio.c     **** 			rPCONG &=~ (0x1 << pos);
 1970              		.loc 1 73 0
 1971 027c 60309FE5 		ldr	r3, .L30
 1972 0280 5C209FE5 		ldr	r2, .L30
 1973 0284 001092E5 		ldr	r1, [r2, #0]
 1974 0288 0100A0E3 		mov	r0, #1
 1975 028c 10201BE5 		ldr	r2, [fp, #-16]
 1976 0290 1022A0E1 		mov	r2, r0, asl r2
 1977 0294 0220E0E1 		mvn	r2, r2
 1978 0298 022001E0 		and	r2, r1, r2
 1979 029c 002083E5 		str	r2, [r3, #0]
  74:../gpio.c     **** 
  75:../gpio.c     **** 			break;
 1980              		.loc 1 75 0
 1981 02a0 0A0000EA 		b	.L29
 1982              	.L27:
  76:../gpio.c     **** 		case EINT:
  77:../gpio.c     **** 			// COMPLETAR: poner en rPCONG 11 a partir de la posiciÃ³n pos para
  78:../gpio.c     **** 			// habilitar la generaciÃ³n de interrupciones externas por el pin
  79:../gpio.c     **** 			// indicado por el parÃ¡metro pin
  80:../gpio.c     **** 			rPCONG |= (0x3 << pos);
 1983              		.loc 1 80 0
 1984 02a4 38309FE5 		ldr	r3, .L30
 1985 02a8 34209FE5 		ldr	r2, .L30
 1986 02ac 001092E5 		ldr	r1, [r2, #0]
 1987 02b0 0300A0E3 		mov	r0, #3
 1988 02b4 10201BE5 		ldr	r2, [fp, #-16]
 1989 02b8 1022A0E1 		mov	r2, r0, asl r2
 1990 02bc 022081E1 		orr	r2, r1, r2
 1991 02c0 002083E5 		str	r2, [r3, #0]
  81:../gpio.c     **** 			break;
 1992              		.loc 1 81 0
 1993 02c4 010000EA 		b	.L29
 1994              	.L23:
  82:../gpio.c     **** 		default:
  83:../gpio.c     **** 			return -1;
 1995              		.loc 1 83 0
 1996 02c8 0030E0E3 		mvn	r3, #0
 1997 02cc 000000EA 		b	.L22
 1998              	.L29:
  84:../gpio.c     **** 	}
  85:../gpio.c     **** 
  86:../gpio.c     **** 	return 0;
 1999              		.loc 1 86 0
 2000 02d0 0030A0E3 		mov	r3, #0
 2001              	.L22:
  87:../gpio.c     **** }
 2002              		.loc 1 87 0
 2003 02d4 0300A0E1 		mov	r0, r3
 2004 02d8 0CD04BE2 		sub	sp, fp, #12
 2005 02dc 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2006 02e0 1EFF2FE1 		bx	lr
 2007              	.L31:
 2008              		.align	2
 2009              	.L30:
 2010 02e4 4000D201 		.word	30539840
 2011              		.cfi_endproc
 2012              	.LFE2:
 2014              		.align	2
 2015              		.global	portG_eint_trig
 2017              	portG_eint_trig:
 2018              	.LFB3:
  88:../gpio.c     **** 
  89:../gpio.c     **** int portG_eint_trig(int pin, enum trigger trig) {
 2019              		.loc 1 89 0
 2020              		.cfi_startproc
 2021              		@ Function supports interworking.
 2022              		@ args = 0, pretend = 0, frame = 16
 2023              		@ frame_needed = 1, uses_anonymous_args = 0
 2024 02e8 0DC0A0E1 		mov	ip, sp
 2025              	.LCFI6:
 2026              		.cfi_def_cfa_register 12
 2027 02ec 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2028 02f0 04B04CE2 		sub	fp, ip, #4
 2029              		.cfi_offset 14, -8
 2030              		.cfi_offset 13, -12
 2031              		.cfi_offset 11, -16
 2032              	.LCFI7:
 2033              		.cfi_def_cfa 11, 4
 2034 02f4 10D04DE2 		sub	sp, sp, #16
 2035 02f8 18000BE5 		str	r0, [fp, #-24]
 2036 02fc 0130A0E1 		mov	r3, r1
 2037 0300 19304BE5 		strb	r3, [fp, #-25]
  90:../gpio.c     **** 	// A COMPLETAR EN LA SEGUNDA PARTE DE LA PRÃ�CTICA
  91:../gpio.c     **** 	int pos = pin*3;
 2038              		.loc 1 91 0
 2039 0304 18201BE5 		ldr	r2, [fp, #-24]
 2040 0308 0230A0E1 		mov	r3, r2
 2041 030c 8330A0E1 		mov	r3, r3, asl #1
 2042 0310 023083E0 		add	r3, r3, r2
 2043 0314 10300BE5 		str	r3, [fp, #-16]
  92:../gpio.c     **** 
  93:../gpio.c     **** 	if (pin < 0 || pin > 7)
 2044              		.loc 1 93 0
 2045 0318 18301BE5 		ldr	r3, [fp, #-24]
 2046 031c 000053E3 		cmp	r3, #0
 2047 0320 020000BA 		blt	.L33
 2048              		.loc 1 93 0 is_stmt 0 discriminator 1
 2049 0324 18301BE5 		ldr	r3, [fp, #-24]
 2050 0328 070053E3 		cmp	r3, #7
 2051 032c 010000DA 		ble	.L34
 2052              	.L33:
  94:../gpio.c     **** 			return -1; // indica error
 2053              		.loc 1 94 0 is_stmt 1
 2054 0330 0030E0E3 		mvn	r3, #0
 2055 0334 5D0000EA 		b	.L35
 2056              	.L34:
  95:../gpio.c     **** 
  96:../gpio.c     **** 	switch(trig) {
 2057              		.loc 1 96 0
 2058 0338 19305BE5 		ldrb	r3, [fp, #-25]	@ zero_extendqisi2
 2059 033c 040053E3 		cmp	r3, #4
 2060 0340 03F19F97 		ldrls	pc, [pc, r3, asl #2]
 2061 0344 560000EA 		b	.L36
 2062              	.L42:
 2063 0348 5C030000 		.word	.L37
 2064 034c 84030000 		.word	.L38
 2065 0350 CC030000 		.word	.L39
 2066 0354 14040000 		.word	.L40
 2067 0358 5C040000 		.word	.L41
 2068              	.L37:
  97:../gpio.c     **** 		case LLOW:
  98:../gpio.c     **** 			rEXTINT &=~(0x7 << pos);
 2069              		.loc 1 98 0
 2070 035c 5C319FE5 		ldr	r3, .L44
 2071 0360 58219FE5 		ldr	r2, .L44
 2072 0364 001092E5 		ldr	r1, [r2, #0]
 2073 0368 0700A0E3 		mov	r0, #7
 2074 036c 10201BE5 		ldr	r2, [fp, #-16]
 2075 0370 1022A0E1 		mov	r2, r0, asl r2
 2076 0374 0220E0E1 		mvn	r2, r2
 2077 0378 022001E0 		and	r2, r1, r2
 2078 037c 002083E5 		str	r2, [r3, #0]
  99:../gpio.c     **** 			break;
 2079              		.loc 1 99 0
 2080 0380 490000EA 		b	.L43
 2081              	.L38:
 100:../gpio.c     **** 		case LHIGH:
 101:../gpio.c     **** 			rEXTINT &=~(0x7 << pos);
 2082              		.loc 1 101 0
 2083 0384 34319FE5 		ldr	r3, .L44
 2084 0388 30219FE5 		ldr	r2, .L44
 2085 038c 001092E5 		ldr	r1, [r2, #0]
 2086 0390 0700A0E3 		mov	r0, #7
 2087 0394 10201BE5 		ldr	r2, [fp, #-16]
 2088 0398 1022A0E1 		mov	r2, r0, asl r2
 2089 039c 0220E0E1 		mvn	r2, r2
 2090 03a0 022001E0 		and	r2, r1, r2
 2091 03a4 002083E5 		str	r2, [r3, #0]
 102:../gpio.c     **** 			rEXTINT |= (0x1 << pos);
 2092              		.loc 1 102 0
 2093 03a8 10319FE5 		ldr	r3, .L44
 2094 03ac 0C219FE5 		ldr	r2, .L44
 2095 03b0 001092E5 		ldr	r1, [r2, #0]
 2096 03b4 0100A0E3 		mov	r0, #1
 2097 03b8 10201BE5 		ldr	r2, [fp, #-16]
 2098 03bc 1022A0E1 		mov	r2, r0, asl r2
 2099 03c0 022081E1 		orr	r2, r1, r2
 2100 03c4 002083E5 		str	r2, [r3, #0]
 103:../gpio.c     **** 			break;
 2101              		.loc 1 103 0
 2102 03c8 370000EA 		b	.L43
 2103              	.L39:
 104:../gpio.c     **** 		case FALLING:
 105:../gpio.c     **** 			rEXTINT &=~(0x7 << pos);
 2104              		.loc 1 105 0
 2105 03cc EC309FE5 		ldr	r3, .L44
 2106 03d0 E8209FE5 		ldr	r2, .L44
 2107 03d4 001092E5 		ldr	r1, [r2, #0]
 2108 03d8 0700A0E3 		mov	r0, #7
 2109 03dc 10201BE5 		ldr	r2, [fp, #-16]
 2110 03e0 1022A0E1 		mov	r2, r0, asl r2
 2111 03e4 0220E0E1 		mvn	r2, r2
 2112 03e8 022001E0 		and	r2, r1, r2
 2113 03ec 002083E5 		str	r2, [r3, #0]
 106:../gpio.c     **** 			rEXTINT |= (0x2 << pos);
 2114              		.loc 1 106 0
 2115 03f0 C8309FE5 		ldr	r3, .L44
 2116 03f4 C4209FE5 		ldr	r2, .L44
 2117 03f8 001092E5 		ldr	r1, [r2, #0]
 2118 03fc 0200A0E3 		mov	r0, #2
 2119 0400 10201BE5 		ldr	r2, [fp, #-16]
 2120 0404 1022A0E1 		mov	r2, r0, asl r2
 2121 0408 022081E1 		orr	r2, r1, r2
 2122 040c 002083E5 		str	r2, [r3, #0]
 107:../gpio.c     **** 			break;
 2123              		.loc 1 107 0
 2124 0410 250000EA 		b	.L43
 2125              	.L40:
 108:../gpio.c     **** 		case RISING:
 109:../gpio.c     **** 			rEXTINT &=~(0x7 << pos);
 2126              		.loc 1 109 0
 2127 0414 A4309FE5 		ldr	r3, .L44
 2128 0418 A0209FE5 		ldr	r2, .L44
 2129 041c 001092E5 		ldr	r1, [r2, #0]
 2130 0420 0700A0E3 		mov	r0, #7
 2131 0424 10201BE5 		ldr	r2, [fp, #-16]
 2132 0428 1022A0E1 		mov	r2, r0, asl r2
 2133 042c 0220E0E1 		mvn	r2, r2
 2134 0430 022001E0 		and	r2, r1, r2
 2135 0434 002083E5 		str	r2, [r3, #0]
 110:../gpio.c     **** 			rEXTINT |= (0x4 << pos);
 2136              		.loc 1 110 0
 2137 0438 80309FE5 		ldr	r3, .L44
 2138 043c 7C209FE5 		ldr	r2, .L44
 2139 0440 001092E5 		ldr	r1, [r2, #0]
 2140 0444 0400A0E3 		mov	r0, #4
 2141 0448 10201BE5 		ldr	r2, [fp, #-16]
 2142 044c 1022A0E1 		mov	r2, r0, asl r2
 2143 0450 022081E1 		orr	r2, r1, r2
 2144 0454 002083E5 		str	r2, [r3, #0]
 111:../gpio.c     **** 			break;
 2145              		.loc 1 111 0
 2146 0458 130000EA 		b	.L43
 2147              	.L41:
 112:../gpio.c     **** 		case EDGE:
 113:../gpio.c     **** 			rEXTINT &=~(0x7 << pos);
 2148              		.loc 1 113 0
 2149 045c 5C309FE5 		ldr	r3, .L44
 2150 0460 58209FE5 		ldr	r2, .L44
 2151 0464 001092E5 		ldr	r1, [r2, #0]
 2152 0468 0700A0E3 		mov	r0, #7
 2153 046c 10201BE5 		ldr	r2, [fp, #-16]
 2154 0470 1022A0E1 		mov	r2, r0, asl r2
 2155 0474 0220E0E1 		mvn	r2, r2
 2156 0478 022001E0 		and	r2, r1, r2
 2157 047c 002083E5 		str	r2, [r3, #0]
 114:../gpio.c     **** 			rEXTINT |= (0x6 << pos);
 2158              		.loc 1 114 0
 2159 0480 38309FE5 		ldr	r3, .L44
 2160 0484 34209FE5 		ldr	r2, .L44
 2161 0488 001092E5 		ldr	r1, [r2, #0]
 2162 048c 0600A0E3 		mov	r0, #6
 2163 0490 10201BE5 		ldr	r2, [fp, #-16]
 2164 0494 1022A0E1 		mov	r2, r0, asl r2
 2165 0498 022081E1 		orr	r2, r1, r2
 2166 049c 002083E5 		str	r2, [r3, #0]
 115:../gpio.c     **** 			break;
 2167              		.loc 1 115 0
 2168 04a0 010000EA 		b	.L43
 2169              	.L36:
 116:../gpio.c     **** 		default:
 117:../gpio.c     **** 			return -1;
 2170              		.loc 1 117 0
 2171 04a4 0030E0E3 		mvn	r3, #0
 2172 04a8 000000EA 		b	.L35
 2173              	.L43:
 118:../gpio.c     **** 	}
 119:../gpio.c     **** 
 120:../gpio.c     **** 	return 0;
 2174              		.loc 1 120 0
 2175 04ac 0030A0E3 		mov	r3, #0
 2176              	.L35:
 121:../gpio.c     **** }
 2177              		.loc 1 121 0
 2178 04b0 0300A0E1 		mov	r0, r3
 2179 04b4 0CD04BE2 		sub	sp, fp, #12
 2180 04b8 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2181 04bc 1EFF2FE1 		bx	lr
 2182              	.L45:
 2183              		.align	2
 2184              	.L44:
 2185 04c0 5000D201 		.word	30539856
 2186              		.cfi_endproc
 2187              	.LFE3:
 2189              		.align	2
 2190              		.global	portG_write
 2192              	portG_write:
 2193              	.LFB4:
 122:../gpio.c     **** 
 123:../gpio.c     **** int portG_write(int pin, enum digital val)
 124:../gpio.c     **** {
 2194              		.loc 1 124 0
 2195              		.cfi_startproc
 2196              		@ Function supports interworking.
 2197              		@ args = 0, pretend = 0, frame = 16
 2198              		@ frame_needed = 1, uses_anonymous_args = 0
 2199 04c4 0DC0A0E1 		mov	ip, sp
 2200              	.LCFI8:
 2201              		.cfi_def_cfa_register 12
 2202 04c8 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2203 04cc 04B04CE2 		sub	fp, ip, #4
 2204              		.cfi_offset 14, -8
 2205              		.cfi_offset 13, -12
 2206              		.cfi_offset 11, -16
 2207              	.LCFI9:
 2208              		.cfi_def_cfa 11, 4
 2209 04d0 10D04DE2 		sub	sp, sp, #16
 2210 04d4 18000BE5 		str	r0, [fp, #-24]
 2211 04d8 0130A0E1 		mov	r3, r1
 2212 04dc 19304BE5 		strb	r3, [fp, #-25]
 125:../gpio.c     **** 	int pos = pin*2;
 2213              		.loc 1 125 0
 2214 04e0 18301BE5 		ldr	r3, [fp, #-24]
 2215 04e4 8330A0E1 		mov	r3, r3, asl #1
 2216 04e8 10300BE5 		str	r3, [fp, #-16]
 126:../gpio.c     **** 
 127:../gpio.c     **** 	if (pin < 0 || pin > 7)
 2217              		.loc 1 127 0
 2218 04ec 18301BE5 		ldr	r3, [fp, #-24]
 2219 04f0 000053E3 		cmp	r3, #0
 2220 04f4 020000BA 		blt	.L47
 2221              		.loc 1 127 0 is_stmt 0 discriminator 1
 2222 04f8 18301BE5 		ldr	r3, [fp, #-24]
 2223 04fc 070053E3 		cmp	r3, #7
 2224 0500 010000DA 		ble	.L48
 2225              	.L47:
 128:../gpio.c     **** 		return -1; // indica error
 2226              		.loc 1 128 0 is_stmt 1
 2227 0504 0030E0E3 		mvn	r3, #0
 2228 0508 270000EA 		b	.L49
 2229              	.L48:
 129:../gpio.c     **** 
 130:../gpio.c     **** 	if (val < 0 || val > 1)
 2230              		.loc 1 130 0
 2231 050c 19305BE5 		ldrb	r3, [fp, #-25]	@ zero_extendqisi2
 2232 0510 010053E3 		cmp	r3, #1
 2233 0514 0100009A 		bls	.L50
 131:../gpio.c     **** 		return -1; // indica error
 2234              		.loc 1 131 0
 2235 0518 0030E0E3 		mvn	r3, #0
 2236 051c 220000EA 		b	.L49
 2237              	.L50:
 132:../gpio.c     **** 
 133:../gpio.c     **** 	if ((rPCONG & (0x3 << pos)) != (0x1 << pos))
 2238              		.loc 1 133 0
 2239 0520 94309FE5 		ldr	r3, .L54
 2240 0524 002093E5 		ldr	r2, [r3, #0]
 2241 0528 0310A0E3 		mov	r1, #3
 2242 052c 10301BE5 		ldr	r3, [fp, #-16]
 2243 0530 1133A0E1 		mov	r3, r1, asl r3
 2244 0534 032002E0 		and	r2, r2, r3
 2245 0538 0110A0E3 		mov	r1, #1
 2246 053c 10301BE5 		ldr	r3, [fp, #-16]
 2247 0540 1133A0E1 		mov	r3, r1, asl r3
 2248 0544 030052E1 		cmp	r2, r3
 2249 0548 0100000A 		beq	.L51
 134:../gpio.c     **** 		return -1; // indica error
 2250              		.loc 1 134 0
 2251 054c 0030E0E3 		mvn	r3, #0
 2252 0550 150000EA 		b	.L49
 2253              	.L51:
 135:../gpio.c     **** 
 136:../gpio.c     **** 	if (val)
 2254              		.loc 1 136 0
 2255 0554 19305BE5 		ldrb	r3, [fp, #-25]	@ zero_extendqisi2
 2256 0558 000053E3 		cmp	r3, #0
 2257 055c 0800000A 		beq	.L52
 137:../gpio.c     **** 		// COMPLETAR: poner en rPDATG el bit indicado por pin a 1
 138:../gpio.c     **** 		rPDATG  |= (0x1 << pos);
 2258              		.loc 1 138 0
 2259 0560 58309FE5 		ldr	r3, .L54+4
 2260 0564 54209FE5 		ldr	r2, .L54+4
 2261 0568 001092E5 		ldr	r1, [r2, #0]
 2262 056c 0100A0E3 		mov	r0, #1
 2263 0570 10201BE5 		ldr	r2, [fp, #-16]
 2264 0574 1022A0E1 		mov	r2, r0, asl r2
 2265 0578 022081E1 		orr	r2, r1, r2
 2266 057c 002083E5 		str	r2, [r3, #0]
 2267 0580 080000EA 		b	.L53
 2268              	.L52:
 139:../gpio.c     **** 	else
 140:../gpio.c     **** 		// COMPLETAR: poner en rPDATG el bit indicado por pin a 0
 141:../gpio.c     **** 		rPDATG &=~ (0x1 << pos);
 2269              		.loc 1 141 0
 2270 0584 34309FE5 		ldr	r3, .L54+4
 2271 0588 30209FE5 		ldr	r2, .L54+4
 2272 058c 001092E5 		ldr	r1, [r2, #0]
 2273 0590 0100A0E3 		mov	r0, #1
 2274 0594 10201BE5 		ldr	r2, [fp, #-16]
 2275 0598 1022A0E1 		mov	r2, r0, asl r2
 2276 059c 0220E0E1 		mvn	r2, r2
 2277 05a0 022001E0 		and	r2, r1, r2
 2278 05a4 002083E5 		str	r2, [r3, #0]
 2279              	.L53:
 142:../gpio.c     **** 	return 0;
 2280              		.loc 1 142 0
 2281 05a8 0030A0E3 		mov	r3, #0
 2282              	.L49:
 143:../gpio.c     **** }
 2283              		.loc 1 143 0
 2284 05ac 0300A0E1 		mov	r0, r3
 2285 05b0 0CD04BE2 		sub	sp, fp, #12
 2286 05b4 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2287 05b8 1EFF2FE1 		bx	lr
 2288              	.L55:
 2289              		.align	2
 2290              	.L54:
 2291 05bc 4000D201 		.word	30539840
 2292 05c0 4400D201 		.word	30539844
 2293              		.cfi_endproc
 2294              	.LFE4:
 2296              		.align	2
 2297              		.global	portG_read
 2299              	portG_read:
 2300              	.LFB5:
 144:../gpio.c     **** 
 145:../gpio.c     **** int portG_read(int pin, enum digital* val)
 146:../gpio.c     **** {
 2301              		.loc 1 146 0
 2302              		.cfi_startproc
 2303              		@ Function supports interworking.
 2304              		@ args = 0, pretend = 0, frame = 16
 2305              		@ frame_needed = 1, uses_anonymous_args = 0
 2306 05c4 0DC0A0E1 		mov	ip, sp
 2307              	.LCFI10:
 2308              		.cfi_def_cfa_register 12
 2309 05c8 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2310 05cc 04B04CE2 		sub	fp, ip, #4
 2311              		.cfi_offset 14, -8
 2312              		.cfi_offset 13, -12
 2313              		.cfi_offset 11, -16
 2314              	.LCFI11:
 2315              		.cfi_def_cfa 11, 4
 2316 05d0 10D04DE2 		sub	sp, sp, #16
 2317 05d4 18000BE5 		str	r0, [fp, #-24]
 2318 05d8 1C100BE5 		str	r1, [fp, #-28]
 147:../gpio.c     **** 	int pos = pin*2;
 2319              		.loc 1 147 0
 2320 05dc 18301BE5 		ldr	r3, [fp, #-24]
 2321 05e0 8330A0E1 		mov	r3, r3, asl #1
 2322 05e4 10300BE5 		str	r3, [fp, #-16]
 148:../gpio.c     **** 
 149:../gpio.c     **** 	if (pin < 0 || pin > 7)
 2323              		.loc 1 149 0
 2324 05e8 18301BE5 		ldr	r3, [fp, #-24]
 2325 05ec 000053E3 		cmp	r3, #0
 2326 05f0 020000BA 		blt	.L57
 2327              		.loc 1 149 0 is_stmt 0 discriminator 1
 2328 05f4 18301BE5 		ldr	r3, [fp, #-24]
 2329 05f8 070053E3 		cmp	r3, #7
 2330 05fc 010000DA 		ble	.L58
 2331              	.L57:
 150:../gpio.c     **** 		return -1; // indica error
 2332              		.loc 1 150 0 is_stmt 1
 2333 0600 0030E0E3 		mvn	r3, #0
 2334 0604 190000EA 		b	.L59
 2335              	.L58:
 151:../gpio.c     **** 
 152:../gpio.c     **** 	if (rPCONG & (0x3 << pos))
 2336              		.loc 1 152 0
 2337 0608 70309FE5 		ldr	r3, .L63
 2338 060c 002093E5 		ldr	r2, [r3, #0]
 2339 0610 0310A0E3 		mov	r1, #3
 2340 0614 10301BE5 		ldr	r3, [fp, #-16]
 2341 0618 1133A0E1 		mov	r3, r1, asl r3
 2342 061c 033002E0 		and	r3, r2, r3
 2343 0620 000053E3 		cmp	r3, #0
 2344 0624 0100000A 		beq	.L60
 153:../gpio.c     **** 		return -1; // indica error
 2345              		.loc 1 153 0
 2346 0628 0030E0E3 		mvn	r3, #0
 2347 062c 0F0000EA 		b	.L59
 2348              	.L60:
 154:../gpio.c     **** 
 155:../gpio.c     **** 	if (rPDATG & (0x1 << pin)/*COMPLETAR: true si estÃ¡ a 1 en rPDATG el pin indicado por el parÃ¡
 2349              		.loc 1 155 0
 2350 0630 4C309FE5 		ldr	r3, .L63+4
 2351 0634 002093E5 		ldr	r2, [r3, #0]
 2352 0638 0110A0E3 		mov	r1, #1
 2353 063c 18301BE5 		ldr	r3, [fp, #-24]
 2354 0640 1133A0E1 		mov	r3, r1, asl r3
 2355 0644 033002E0 		and	r3, r2, r3
 2356 0648 000053E3 		cmp	r3, #0
 2357 064c 0300000A 		beq	.L61
 156:../gpio.c     **** 		*val = HIGH;
 2358              		.loc 1 156 0
 2359 0650 1C301BE5 		ldr	r3, [fp, #-28]
 2360 0654 0120A0E3 		mov	r2, #1
 2361 0658 0020C3E5 		strb	r2, [r3, #0]
 2362 065c 020000EA 		b	.L62
 2363              	.L61:
 157:../gpio.c     **** 	else
 158:../gpio.c     **** 		*val = LOW;
 2364              		.loc 1 158 0
 2365 0660 1C301BE5 		ldr	r3, [fp, #-28]
 2366 0664 0020A0E3 		mov	r2, #0
 2367 0668 0020C3E5 		strb	r2, [r3, #0]
 2368              	.L62:
 159:../gpio.c     **** 
 160:../gpio.c     **** 	return 0;
 2369              		.loc 1 160 0
 2370 066c 0030A0E3 		mov	r3, #0
 2371              	.L59:
 161:../gpio.c     **** }
 2372              		.loc 1 161 0
 2373 0670 0300A0E1 		mov	r0, r3
 2374 0674 0CD04BE2 		sub	sp, fp, #12
 2375 0678 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2376 067c 1EFF2FE1 		bx	lr
 2377              	.L64:
 2378              		.align	2
 2379              	.L63:
 2380 0680 4000D201 		.word	30539840
 2381 0684 4400D201 		.word	30539844
 2382              		.cfi_endproc
 2383              	.LFE5:
 2385              		.align	2
 2386              		.global	portG_conf_pup
 2388              	portG_conf_pup:
 2389              	.LFB6:
 162:../gpio.c     **** 
 163:../gpio.c     **** int portG_conf_pup(int pin, enum enable st)
 164:../gpio.c     **** {
 2390              		.loc 1 164 0
 2391              		.cfi_startproc
 2392              		@ Function supports interworking.
 2393              		@ args = 0, pretend = 0, frame = 8
 2394              		@ frame_needed = 1, uses_anonymous_args = 0
 2395 0688 0DC0A0E1 		mov	ip, sp
 2396              	.LCFI12:
 2397              		.cfi_def_cfa_register 12
 2398 068c 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2399 0690 04B04CE2 		sub	fp, ip, #4
 2400              		.cfi_offset 14, -8
 2401              		.cfi_offset 13, -12
 2402              		.cfi_offset 11, -16
 2403              	.LCFI13:
 2404              		.cfi_def_cfa 11, 4
 2405 0694 08D04DE2 		sub	sp, sp, #8
 2406 0698 10000BE5 		str	r0, [fp, #-16]
 2407 069c 0130A0E1 		mov	r3, r1
 2408 06a0 11304BE5 		strb	r3, [fp, #-17]
 165:../gpio.c     **** 	if (pin < 0 || pin > 7)
 2409              		.loc 1 165 0
 2410 06a4 10301BE5 		ldr	r3, [fp, #-16]
 2411 06a8 000053E3 		cmp	r3, #0
 2412 06ac 020000BA 		blt	.L66
 2413              		.loc 1 165 0 is_stmt 0 discriminator 1
 2414 06b0 10301BE5 		ldr	r3, [fp, #-16]
 2415 06b4 070053E3 		cmp	r3, #7
 2416 06b8 010000DA 		ble	.L67
 2417              	.L66:
 166:../gpio.c     **** 		return -1; // indica error
 2418              		.loc 1 166 0 is_stmt 1
 2419 06bc 0030E0E3 		mvn	r3, #0
 2420 06c0 1D0000EA 		b	.L68
 2421              	.L67:
 167:../gpio.c     **** 
 168:../gpio.c     **** 	if (st != ENABLE && st != DISABLE)
 2422              		.loc 1 168 0
 2423 06c4 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2424 06c8 010053E3 		cmp	r3, #1
 2425 06cc 0400000A 		beq	.L69
 2426              		.loc 1 168 0 is_stmt 0 discriminator 1
 2427 06d0 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2428 06d4 000053E3 		cmp	r3, #0
 2429 06d8 0100000A 		beq	.L69
 169:../gpio.c     **** 		return -1; // indica error
 2430              		.loc 1 169 0 is_stmt 1
 2431 06dc 0030E0E3 		mvn	r3, #0
 2432 06e0 150000EA 		b	.L68
 2433              	.L69:
 170:../gpio.c     **** 
 171:../gpio.c     **** 	if (st == ENABLE)
 2434              		.loc 1 171 0
 2435 06e4 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2436 06e8 010053E3 		cmp	r3, #1
 2437 06ec 0900001A 		bne	.L70
 172:../gpio.c     **** 		// COMPLETAR: poner el pin de rPUPG indicado por el parametro pin al valor adecuado,
 173:../gpio.c     **** 		// para activar la resistencia de pull-up
 174:../gpio.c     **** 		rPUPG &=~ (0x1 << pin);
 2438              		.loc 1 174 0
 2439 06f0 54309FE5 		ldr	r3, .L72
 2440 06f4 50209FE5 		ldr	r2, .L72
 2441 06f8 001092E5 		ldr	r1, [r2, #0]
 2442 06fc 0100A0E3 		mov	r0, #1
 2443 0700 10201BE5 		ldr	r2, [fp, #-16]
 2444 0704 1022A0E1 		mov	r2, r0, asl r2
 2445 0708 0220E0E1 		mvn	r2, r2
 2446 070c 022001E0 		and	r2, r1, r2
 2447 0710 002083E5 		str	r2, [r3, #0]
 2448 0714 070000EA 		b	.L71
 2449              	.L70:
 175:../gpio.c     **** 
 176:../gpio.c     **** 	else
 177:../gpio.c     **** 		// COMPLETAR: poner el pin de rPUPG indicado por el parametro pin al valor adecuado,
 178:../gpio.c     **** 		// para desactivar la resistencia de pull-up
 179:../gpio.c     **** 		rPUPG |= (0x1 << pin);
 2450              		.loc 1 179 0
 2451 0718 2C309FE5 		ldr	r3, .L72
 2452 071c 28209FE5 		ldr	r2, .L72
 2453 0720 001092E5 		ldr	r1, [r2, #0]
 2454 0724 0100A0E3 		mov	r0, #1
 2455 0728 10201BE5 		ldr	r2, [fp, #-16]
 2456 072c 1022A0E1 		mov	r2, r0, asl r2
 2457 0730 022081E1 		orr	r2, r1, r2
 2458 0734 002083E5 		str	r2, [r3, #0]
 2459              	.L71:
 180:../gpio.c     **** 
 181:../gpio.c     **** 	return 0;
 2460              		.loc 1 181 0
 2461 0738 0030A0E3 		mov	r3, #0
 2462              	.L68:
 182:../gpio.c     **** }
 2463              		.loc 1 182 0
 2464 073c 0300A0E1 		mov	r0, r3
 2465 0740 0CD04BE2 		sub	sp, fp, #12
 2466 0744 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2467 0748 1EFF2FE1 		bx	lr
 2468              	.L73:
 2469              		.align	2
 2470              	.L72:
 2471 074c 4800D201 		.word	30539848
 2472              		.cfi_endproc
 2473              	.LFE6:
 2475              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 gpio.c
C:\Users\USUARI~2\AppData\Local\Temp\ccfgEGNu.s:1698   .text:00000000 $a
C:\Users\USUARI~2\AppData\Local\Temp\ccfgEGNu.s:1701   .text:00000000 portB_conf
C:\Users\USUARI~2\AppData\Local\Temp\ccfgEGNu.s:1784   .text:000000c4 $d
C:\Users\USUARI~2\AppData\Local\Temp\ccfgEGNu.s:1788   .text:000000c8 $a
C:\Users\USUARI~2\AppData\Local\Temp\ccfgEGNu.s:1791   .text:000000c8 portB_write
C:\Users\USUARI~2\AppData\Local\Temp\ccfgEGNu.s:1870   .text:00000180 $d
C:\Users\USUARI~2\AppData\Local\Temp\ccfgEGNu.s:1874   .text:00000184 $a
C:\Users\USUARI~2\AppData\Local\Temp\ccfgEGNu.s:1877   .text:00000184 portG_conf
C:\Users\USUARI~2\AppData\Local\Temp\ccfgEGNu.s:1921   .text:000001dc $d
C:\Users\USUARI~2\AppData\Local\Temp\ccfgEGNu.s:1927   .text:000001ec $a
C:\Users\USUARI~2\AppData\Local\Temp\ccfgEGNu.s:2010   .text:000002e4 $d
C:\Users\USUARI~2\AppData\Local\Temp\ccfgEGNu.s:2014   .text:000002e8 $a
C:\Users\USUARI~2\AppData\Local\Temp\ccfgEGNu.s:2017   .text:000002e8 portG_eint_trig
C:\Users\USUARI~2\AppData\Local\Temp\ccfgEGNu.s:2063   .text:00000348 $d
C:\Users\USUARI~2\AppData\Local\Temp\ccfgEGNu.s:2070   .text:0000035c $a
C:\Users\USUARI~2\AppData\Local\Temp\ccfgEGNu.s:2185   .text:000004c0 $d
C:\Users\USUARI~2\AppData\Local\Temp\ccfgEGNu.s:2189   .text:000004c4 $a
C:\Users\USUARI~2\AppData\Local\Temp\ccfgEGNu.s:2192   .text:000004c4 portG_write
C:\Users\USUARI~2\AppData\Local\Temp\ccfgEGNu.s:2291   .text:000005bc $d
C:\Users\USUARI~2\AppData\Local\Temp\ccfgEGNu.s:2296   .text:000005c4 $a
C:\Users\USUARI~2\AppData\Local\Temp\ccfgEGNu.s:2299   .text:000005c4 portG_read
C:\Users\USUARI~2\AppData\Local\Temp\ccfgEGNu.s:2380   .text:00000680 $d
C:\Users\USUARI~2\AppData\Local\Temp\ccfgEGNu.s:2385   .text:00000688 $a
C:\Users\USUARI~2\AppData\Local\Temp\ccfgEGNu.s:2388   .text:00000688 portG_conf_pup
C:\Users\USUARI~2\AppData\Local\Temp\ccfgEGNu.s:2471   .text:0000074c $d
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
